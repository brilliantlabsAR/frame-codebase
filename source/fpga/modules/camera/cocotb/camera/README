#
# Authored by: Robert Metchev / Chips & Scripts (rmetchev@ieee.org)
#
# CERN Open Hardware Licence Version 2 - Permissive
#
# Copyright (C) 2024 Robert Metchev
#

Instructions:
1.) RTL sim with verilator: 64-bit environment. Bypassed Lattice IP in test bench and camera.
$> make clean
$> make SIM=verilator
Result: jpeg_out.jpg

2.) RTL sim with modelsim: *32-bit* environment (see below). Includes CSI and other Lattice IP in test bench and camera.
$> make ip -C ../../../../radiant/      # This uses ipgen to build Lattice IP 
$> make clean
$> make SIM=modelsim
Result: jpeg_out.jpg

3.) Gate sim with modelsim: *32-bit* environment (see below).
Required: Gate level netlist (frame_frame_vo.v) and SDF file (frame_frame_vo.sdf)

3a.) No SDF: Same as 2.) with
$> make clean
$> make SIM=modelsim .... GATE_SIM=1

3b.) With SDF: Same as 3a.) with
$> make clean
$> make SIM=modelsim .... GATE_SIM=1 SDF_ANNO=1

4.) RTL sim with icarus verilog: 64-bit environment. Bypassed Lattice IP in test bench and camera.
$> make clean
$> make SIM=icarus
Result: jpeg_out.jpg



Note:
Lattice IP is internally encryped and thus can be simulated only with the
Modelsim simulator provided Lattice. This Modelsim simulator is a 32-bit
executable and requires a 32-bit Python installation with 32-bit Cocotb (and
other precompiled 32-bit packages, like OpenCV). 
Note: Only Python 3.7.1 is provided in a 32-bit verion by Anaconda.

https://github.com/cocotb/cocotb/wiki/Tier-2-Setup-Instructions#conda-based-installation-all-os

$> conda create -n py3_32 # use 'sudo conda' to make this a global rather than local environment
$> conda activate py3_32
$> conda config --env --set subdir linux-32
$> conda install python=3 gxx_linux-32
$>
$> pip install cocotb  # uses pip from 32-bit Python environment
$>
$> make clean
$> make SIM=modelsim



Verilator sim in 64-bit env:
$> conda activate base
$> make clean
$> make SIM=verilator




